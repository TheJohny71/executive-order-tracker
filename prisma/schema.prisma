datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum DocumentType {
  EXECUTIVE_ORDER
  MEMORANDUM
}

model ExecutiveOrder {
  id            String       @id @default(cuid())
  identifier    String       @unique  // Normalized identifier (EO number or memo ID)
  type          DocumentType // Using enum for type safety
  title         String
  date          DateTime
  url           String       @unique
  summary       String?      @db.Text
  notes         String?      @db.Text
  content       String?      @db.Text  // Full text content
  status        Status       @relation(fields: [statusId], references: [id])
  statusId      String
  isNew         Boolean      @default(true)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  categories    Category[]
  agencies      Agency[]
  citations     Citation[]    // New relation for cross-references
  amendments    Amendment[]   // New relation for amendments

  @@index([date])
  @@index([type])
  @@index([statusId])
}

model Status {
  id            String          @id @default(cuid())
  name          String          @unique // e.g., "Active", "Revoked", "Superseded"
  description   String?
  orders        ExecutiveOrder[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Category {
  id            String          @id @default(cuid())
  name          String          @unique
  description   String?         @db.Text
  orders        ExecutiveOrder[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Agency {
  id            String          @id @default(cuid())
  name          String          @unique
  abbreviation  String?         @unique
  description   String?         @db.Text
  orders        ExecutiveOrder[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Citation {
  id            String          @id @default(cuid())
  sourceId      String
  targetId      String
  description   String?         @db.Text
  source        ExecutiveOrder  @relation(fields: [sourceId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Amendment {
  id            String          @id @default(cuid())
  orderId       String
  order         ExecutiveOrder  @relation(fields: [orderId], references: [id])
  amendedText   String          @db.Text
  description   String?         @db.Text
  dateAmended   DateTime
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}